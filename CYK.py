#simple python project that implements CYK algorithm for a context-free grammar in Chomsky normal form
#reads data from input.txt as follows:
#first line, n(the number of productions)
#next n lines, a production on each line(nonterminal terminal/nonterminal nonterminalnonterminal)
#last line, the word to be generated by the grammar
#output is either true or false,true if the word can be generated by the grammar, and false otherwise
if __name__ == '__main__':
    dateintrare=open("input.txt","r")
    nproductions=int(dateintrare.readline())
    d={}
    for i in range(0,nproductions):
        linie=dateintrare.readline()
        if linie.split(" ")[0] not in d:
            d[linie.split(" ")[0]]=[]
            d[linie.split(" ")[0]].append(linie.split(" ")[1].replace("\n", ""))
        else:
            d[linie.split(" ")[0]] .append(linie.split(" ")[1].replace("\n",""))
    word=dateintrare.readline();
    table=[]
    drez={}
    for step in range(0,len(word)):
        table.append([])
        nrlet=step+1
        if nrlet==1:
            for letter in word:
                rez=[]
                for key in d:
                    if letter in d[key]:
                        rez.append(key)
                table[step].append(rez)
                drez[letter]=rez
        else:
            for l in range(0,len(word)-step):
                intword=word[l:l+step+1]
                rez=[]
                for sep in range(1,len(intword)):
                    c1=intword[:sep]
                    c2=intword[sep:]
                    comp1=drez[c1]
                    comp2=drez[c2]
                    for el1 in comp1:
                        for el2 in comp2:
                            el=el1+el2
                            for key in d:
                                if el in d[key] and key not in rez:
                                    rez.append(key)
                table[step].append(rez)
                drez[intword]=rez
    if('S' in table[len(word)-1][0]):
        print("true")
    else:
        print("false")
"""
input.txt
8
S AB
S BC
A BA
A a
B CC
B b
C AB
C a
baaba
"""
